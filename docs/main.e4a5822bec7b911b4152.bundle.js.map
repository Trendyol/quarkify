{"version":3,"file":"main.e4a5822bec7b911b4152.bundle.js","sources":["webpack:///./src/components/input/input.tsx"],"sourcesContent":["import React from \"react\";\nimport IInput from \"../../interfaces/input\";\nimport \"../../styles/components/_input.scss\";\nimport classNamesDefault from \"../../utils/class-names-default\";\n\nclass Input extends React.PureComponent<IProps> {\n  private static defaultProps = {\n    type: \"text\",\n  };\n\n  public render() {\n    let newType = this.props.type;\n    const {\n      error,\n      errorMessage,\n      fluid,\n      subtext,\n      type,\n      label,\n      disabled,\n      ...props\n    } = this.props;\n    if (type === \"checkbox\" || type === \"radio\") {\n      newType = \"text\";\n    }\n    return (\n      <div className={`input-wrapper ${fluid ? \"fluid\" : \"\"}`}>\n        {label && (\n          <label className={`${disabled ? \"disabled\" : \"\"}`}>{label}</label>\n        )}\n        {subtext && <span className=\"input-subtext\">{subtext}</span>}\n        <input\n          disabled={disabled}\n          type={newType}\n          className={classNamesDefault({ error, disabled })}\n          {...props}\n        />\n        {error && errorMessage && (\n          <span className=\"input-error\">{errorMessage}</span>\n        )}\n      </div>\n    );\n  }\n}\n\ninterface IProps extends IInput {\n  disabled?: boolean;\n  error?: boolean;\n  errorMessage?: string;\n  label?: string;\n  subtext?: string;\n  fluid?: boolean;\n}\n\nexport default Input;\n"],"mappings":"AAKA","sourceRoot":""}